// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when get client schema, should return it 1`] = `
GraphQLSchema {
  "_directives": Array [
    GraphQLDirective {
      "args": Array [
        Object {
          "defaultValue": undefined,
          "description": "Included when true.",
          "name": "if",
          "type": "Boolean!",
        },
      ],
      "description": "Directs the executor to include this field or fragment only when the \`if\` argument is true.",
      "locations": Array [
        "FIELD",
        "FRAGMENT_SPREAD",
        "INLINE_FRAGMENT",
      ],
      "name": "include",
    },
    GraphQLDirective {
      "args": Array [
        Object {
          "defaultValue": undefined,
          "description": "Skipped when true.",
          "name": "if",
          "type": "Boolean!",
        },
      ],
      "description": "Directs the executor to skip this field or fragment when the \`if\` argument is true.",
      "locations": Array [
        "FIELD",
        "FRAGMENT_SPREAD",
        "INLINE_FRAGMENT",
      ],
      "name": "skip",
    },
    GraphQLDirective {
      "args": Array [
        Object {
          "defaultValue": "No longer supported",
          "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted in [Markdown](https://daringfireball.net/projects/markdown/).",
          "name": "reason",
          "type": "String",
        },
      ],
      "description": "Marks an element of a GraphQL schema as no longer supported.",
      "locations": Array [
        "FIELD_DEFINITION",
        "ENUM_VALUE",
      ],
      "name": "deprecated",
    },
  ],
  "_implementations": Object {
    "Node": Array [
      "Viewer",
      "Model1",
      "Model2",
    ],
  },
  "_mutationType": "Mutation",
  "_queryType": "Query",
  "_subscriptionType": null,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "CreateMode1lInput": "CreateMode1lInput",
    "CreateModel1InputSetField1": "CreateModel1InputSetField1",
    "CreateModel1Payload": "CreateModel1Payload",
    "Field2": "Field2",
    "ID": "ID",
    "Int": "Int",
    "Model1": "Model1",
    "Model1Connection": "Model1Connection",
    "Model1ConnectionEdge": "Model1ConnectionEdge",
    "Model1ConnectionPageInfo": "Model1ConnectionPageInfo",
    "Model2": "Model2",
    "Mutation": "Mutation",
    "Node": "Node",
    "Query": "Query",
    "String": "String",
    "Viewer": "Viewer",
    "Where": "Where",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
  },
}
`;
